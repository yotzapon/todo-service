{
	"info": {
		"_postman_id": "5bc76226-db89-4e86-b7a2-b4f2bc46b20f",
		"name": "TodoApp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24715743"
	},
	"item": [
		{
			"name": "e2e",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"access_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"tester02\",\n    \"password\":\"2222\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/login",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTodo-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"todoID1\", jsonData.data.id);",
									"",
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a valid title\", function () {",
									"    pm.expect(pm.response.json().data.title).to.eql(\"home\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"home\",\n    \"description\":\"buy the water\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/v1/todos",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTodo-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"todoID2\", jsonData.data.id);",
									"",
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a valid title\", function () {",
									"    pm.expect(pm.response.json().data.title).to.eql(\"home-2\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"home-2\",\n    \"description\":\"buy the water\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/v1/todos",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTodoList-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a list of todo\", function () {",
									"    pm.expect(pm.response.json().data).to.be.an('array');",
									"    pm.expect(pm.response.json().data).to.have.lengthOf(2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/v1/todos",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a list of todo\", function () {",
									"    pm.expect(pm.response.json().data).to.be.an('array');",
									"    pm.expect(pm.response.json().data).to.have.lengthOf(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/v1/todos?ids={{todoID1}},{{todoID2}}",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{todoID1}},{{todoID2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTodo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a valid title\", function () {",
									"    pm.expect(pm.response.json().data.title).to.eql(\"school\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"school\",\n    \"description\":\"buy new chair\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/v1/todos?id={{todoID1}}",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							],
							"query": [
								{
									"key": "id",
									"value": "{{todoID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "markTodoComplete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a valid isCompleted\", function () {",
									"    pm.expect(pm.response.json().data.isCompleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "localhost:8082/v1/todos?id={{todoID1}}",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							],
							"query": [
								{
									"key": "id",
									"value": "{{todoID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTodoComplete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8082/v1/todos?id={{todoID1}}",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							],
							"query": [
								{
									"key": "id",
									"value": "{{todoID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getTodoList-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should have a status code of 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should be a JSON object\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response should have a list of todo\", function () {",
									"    pm.expect(pm.response.json().data).to.be.an('array');",
									"    pm.expect(pm.response.json().data).to.have.lengthOf(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/v1/todos",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"v1",
								"todos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "livez",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8082/livez",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"livez"
					]
				}
			},
			"response": []
		},
		{
			"name": "swagger",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8082/swagger/index.html",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"swagger",
						"index.html"
					]
				}
			},
			"response": []
		},
		{
			"name": "readyz",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8082/readyz",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"readyz"
					]
				}
			},
			"response": []
		},
		{
			"name": "getTodos",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8082/v1/todos?isComplete=true&status=ACTIVE&orderCreated=asc&orderUpdated=desc&limit=2",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					],
					"query": [
						{
							"key": "ids",
							"value": "todos_01GY4P5P1GJTWQM3G2R51Y1D6C,todos_01GY4QB2E6C4DE3QH8H1RAMXE0",
							"disabled": true
						},
						{
							"key": "isComplete",
							"value": "true"
						},
						{
							"key": "status",
							"value": "ACTIVE"
						},
						{
							"key": "orderCreated",
							"value": "asc"
						},
						{
							"key": "orderUpdated",
							"value": "desc"
						},
						{
							"key": "limit",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getTodoOne",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8082/v1/todos?ids=todos_01GY4P5P1GJTWQM3G2R51Y1D6C,todos_01GY4QB2E6C4DE3QH8H1RAMXE0",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					],
					"query": [
						{
							"key": "ids",
							"value": "todos_01GY4P5P1GJTWQM3G2R51Y1D6C,todos_01GY4QB2E6C4DE3QH8H1RAMXE0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getTodoList",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8082/v1/todos",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTodo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"todoID\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"home\",\n    \"description\":\"buy the water\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8082/v1/todos",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateTodo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"home\",\n    \"description\":\"buy new chair\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8082/v1/todos?id=todos_01GY4P5P1GJTWQM3G2R51Y1D6C",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					],
					"query": [
						{
							"key": "id",
							"value": "todos_01GY4P5P1GJTWQM3G2R51Y1D6C"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "markTodoComplete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "localhost:8082/v1/todos?id=todos_01GY4P5P1GJTWQM3G2R51Y1D6C",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					],
					"query": [
						{
							"key": "id",
							"value": "todos_01GY4P5P1GJTWQM3G2R51Y1D6C"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteTodoComplete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8082/v1/todos?id=todos_01GY4FW8HM9BBVQ2EDMRHA83RQ",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"v1",
						"todos"
					],
					"query": [
						{
							"key": "id",
							"value": "todos_01GY4FW8HM9BBVQ2EDMRHA83RQ"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"access_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\":\"tester02\",\n    \"password\":\"2222\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8082/login",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "todoID",
			"value": ""
		},
		{
			"key": "todoID1",
			"value": ""
		},
		{
			"key": "todoID2",
			"value": ""
		}
	]
}
